Index: app/src/main/java/com/example/testsplash/pedometerLockScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.testsplash;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\nimport android.Manifest;\r\nimport android.accessibilityservice.AccessibilityServiceInfo;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.ServiceConnection;\r\nimport android.content.pm.PackageInfo;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Color;\r\nimport android.hardware.Sensor;\r\nimport android.hardware.SensorEvent;\r\nimport android.hardware.SensorEventListener;\r\nimport android.hardware.SensorManager;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.os.SystemClock;\r\nimport android.provider.Settings;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.accessibility.AccessibilityManager;\r\nimport android.view.animation.Animation;\r\nimport android.view.animation.AnimationUtils;\r\nimport android.widget.Button;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport com.dinuscxj.progressbar.CircleProgressBar;\r\n\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.time.LocalDate;\r\nimport java.time.LocalTime;\r\nimport java.time.ZoneId;\r\nimport java.time.format.DateTimeFormatter;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\npublic class pedometerLockScreen extends Activity implements SensorEventListener { //\r\n    private static final String DEFAULT_PATTERN = \"%d\"+ \"/\" +\"%d\";\r\n    public static Object activity2;\r\n    private Activity activity;\r\n    private boolean mIsBound;\r\n    private String current_time;\r\n\r\n    Animation animation;\r\n    ImageView imageView;\r\n    BackRunnable runnable = new BackRunnable();\r\n    private Thread timeThread = null;\r\n    TextView tv_sensor;\r\n    TextView time;\r\n    TextView getTv;\r\n    TextView selected_walk;\r\n    SensorManager sm;\r\n    Sensor sensor_step_detector;\r\n    int steps = 19999;\r\n    CircleProgressBar circleProgressBar;\r\n    private static Handler mHandler ;\r\n    Long ell;  //타이머 시간(초로 계산하여 나옴)\r\n    final static int PERMISSION_REQUEST_CODE = 1000;\r\n\r\n\r\n    //스톱워치 상태를 위한 상수\r\n    final static int RUNNING = 1;\r\n    final static int STOP = 0;\r\n    int mStatus = RUNNING;\r\n    long mBaseTime;\r\n    long mPauseTime;\r\n\r\n    // 마지막으로 뒤로 가기 버튼을 눌렀던 시간 저장\r\n    private long backKeyPressedTime = 0;\r\n    // 첫 번째 뒤로 가기 버튼을 누를 때 표시S\r\n    private Toast toast;\r\n\r\n    //접근성 서비스 객체생성\r\n    LockApp lock = new LockApp();\r\n\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.O)\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.run_pedometer_main);\r\n        lock.setFlag(false); //잠금 활성화\r\n\r\n\r\n        getTv = findViewById(R.id.getTime);\r\n        getTv.setText(getTime());\r\n\r\n        sm = (SensorManager)getSystemService(SENSOR_SERVICE);  //센서 매니저 생성\r\n        sensor_step_detector = sm.getDefaultSensor(Sensor.TYPE_STEP_DETECTOR);  //스텝 감지 센서 등록\r\n\r\n        circleProgressBar = findViewById(R.id.cpb_circlebar);\r\n\r\n        if(ContextCompat.checkSelfPermission(this,\r\n\r\n                Manifest.permission.ACTIVITY_RECOGNITION) == PackageManager.PERMISSION_DENIED){\r\n\r\n            requestPermissions(new String[]{Manifest.permission.ACTIVITY_RECOGNITION}, 0);\r\n        }\r\n        permissionCheck();\r\n        checkAccessibilityPermissions();\r\n        setAccessibilityPermissions();\r\n\r\n        selected_walk = (TextView) findViewById(R.id.swalk); // 이전 화면에서 선택한 걸음을 받을 변수\r\n        Intent myIntent = getIntent();\r\n        String walk = myIntent.getExtras().getString(\"walk_value\");\r\n        selected_walk.setText(walk); // 받아온 걸음수를 selected_walk 텍스트 박스에 저장한다.\r\n\r\n//        Toast.makeText(pedometerLockScreen.this, \"선택된 아이템 : \"\r\n//                + walk, Toast.LENGTH_SHORT).show();\r\n\r\n        imageView = findViewById(R.id.imageView);\r\n        imageView.setColorFilter(Color.parseColor(\"#0066cc\"));\r\n        animation = AnimationUtils.loadAnimation(getApplicationContext(),R.anim.shake_shoe);\r\n        imageView.startAnimation(animation);\r\n\r\n        time = findViewById(R.id.tv4);\r\n        tv_sensor = findViewById(R.id.sensor);\r\n        tv_sensor.setText(\"0\");  //걸음 수 초기화 및 출력\r\n\r\n        Thread thread = new Thread(runnable);\r\n        thread.setDaemon(true);\r\n        thread.start();\r\n\r\n        circleBar();  //원형 프로세스 바\r\n        timerOn();  //타이머\r\n}\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.O)\r\n    private String getTime(){\r\n        long now = System.currentTimeMillis();\r\n        Date date = new Date(now);\r\n\r\n        SimpleDateFormat dateFormat1 = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n        SimpleDateFormat dateFormat2 = new SimpleDateFormat(\"hh:mm:ss\");\r\n\r\n        String getTime = dateFormat2.format(date);\r\n        Log.e(TAG, \"current time is \" + getTime);\r\n        return getTime;\r\n    }\r\n\r\n    public void compare_time() {\r\n    }\r\n\r\n\r\n    //원형 프로세스바\r\n    public void circleBar(){\r\n        int num = Integer.parseInt(selected_walk.getText().toString());\r\n        CircleProgressBar.ProgressFormatter progressFormatter = new CircleProgressBar.ProgressFormatter() {\r\n            @Override\r\n            public CharSequence format(int progress, int max) {\r\n                return String.format(DEFAULT_PATTERN,steps, num);\r\n            }\r\n        };\r\n\r\n        circleProgressBar.setProgressFormatter(progressFormatter);\r\n        circleProgressBar.setProgressTextColor(ContextCompat.getColor(this, R.color.white_gray_color));\r\n        circleProgressBar.setProgressBackgroundColor(ContextCompat.getColor(this, R.color.white_gray_color));\r\n        circleProgressBar.setProgressStartColor(ContextCompat.getColor(this, R.color.teal_200));\r\n        circleProgressBar.setProgressEndColor(ContextCompat.getColor(this, R.color.button_color));\r\n        int max = 100;\r\n        int progress = 70;\r\n        int pi = 360;\r\n        int start = 270;\r\n        int degree = start-(int)((steps/(double)num)*pi);\r\n        circleProgressBar.setMax(num);\r\n        circleProgressBar.setProgress(steps);\r\n        circleProgressBar.setStartDegree(degree);\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        sm.registerListener(this, sensor_step_detector, SensorManager.SENSOR_DELAY_NORMAL );\r\n    }\r\n\r\n    @Override\r\n    protected void onPause() {\r\n        super.onPause();\r\n        sm.unregisterListener(this);\r\n    }\r\n\r\n    @Override\r\n    public void onSensorChanged(SensorEvent sensorEvent) {  //센서값이 변할 때\r\n        switch(sensorEvent.sensor.getType()){  //센서 유형이 스텝 감지 센서인 경우 걸음수를 1증가하여 출력력\r\n            case Sensor.TYPE_STEP_DETECTOR:\r\n                tv_sensor.setText(\"\"+ (++steps));\r\n                break;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onAccuracyChanged(Sensor sensor, int i) {\r\n    }\r\n\r\n\r\n    //스톱워치에 사용하는 핸들러\r\n    Handler handler = new Handler(){\r\n        @Override\r\n        public void handleMessage(android.os.Message msg) {\r\n\r\n            time.setText(getEllapse()); //텍스트뷰 수정\r\n            handler.sendEmptyMessage(0);  //메시지 다시 보냄(0은 메시지 구분 위ㅏㅁ)\r\n            allStop();\r\n\r\n        }\r\n    };\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        handler.removeMessages(0);  //메시지 지워서 메모리누수 방지\r\n        super.onDestroy();\r\n    }\r\n\r\n    public void timerOn(){\r\n        switch(mStatus){\r\n            case RUNNING:  //시작상태이면\r\n                mBaseTime = SystemClock.elapsedRealtime();  //현재값 세팅\r\n                handler.sendEmptyMessage(0);  //헨들러로 메시지 보냄\r\n                System.out.println(\"러닝 반복\");\r\n                //mStatus = STOP;\r\n                break;\r\n\r\n            case STOP:\r\n                handler.removeMessages(0);\r\n                //처음상태로 원상복귀시킴\r\n                time.setText(String.format(\"%02d:%02d:%02d\", ell / 1000 / 60 / 60, ell / 1000 / 60, (ell/1000)%60));\r\n                //mStatus = RUNNING;\r\n                break;\r\n        }\r\n    }\r\n\r\n    //타이머 시간 계산\r\n    public String getEllapse(){\r\n        long now = SystemClock.elapsedRealtime();\r\n        ell = now - mBaseTime;   //현재 시간과 지난 시간을 빼서 ell값을 구함함\r\n       String sEll = String.format(\"%02d:%02d:%02d\", ell / 1000 / 60 / 60, ell / 1000 / 60, (ell/1000)%60);\r\n        return sEll;\r\n    }\r\n\r\n    public void allStop(){  //시간 멈추기\r\n        String a = selected_walk.getText().toString();\r\n        if(steps > Integer.parseInt(a)){\r\n            mStatus = STOP;\r\n            runnable.stop();\r\n            timerOn();\r\n\r\n            Intent myIntent1 = new Intent(getApplicationContext(),Complete.class);\r\n            startActivity(myIntent1);\r\n\r\n        }else\r\n            mStatus = RUNNING;\r\n    }\r\n\r\n\r\n    class BackRunnable implements Runnable{\r\n        private boolean stopped=false;\r\n        @Override\r\n        public void run() {\r\n            while(!stopped){   //!Thread.currentThread().isInterrupted()\r\n                circleBar();\r\n               // calKcal();\r\n                try{\r\n                    Thread.sleep(1000);\r\n                }catch(InterruptedException e){\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n        public void stop(){\r\n            stopped=true;\r\n        }\r\n    }\r\n\r\n//    public class CurrentDateTime {\r\n//        private LocalTime time_now;\r\n//\r\n//        @RequiresApi(api = Build.VERSION_CODES.O)\r\n//        public LocalTime get_time() {\r\n//            time_now = LocalTime.now();\r\n//            return time_now;\r\n//        }\r\n//    }\r\n\r\n   private void permissionCheck() {\r\n       if (android.os.Build.VERSION.SDK_INT >= 23) {\r\n           int permissionCheck = ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE);\r\n           ArrayList<String> arrayPermission = new ArrayList<String>();\r\n\r\n           if (permissionCheck != PackageManager.PERMISSION_GRANTED) {\r\n               arrayPermission.add(Manifest.permission.READ_EXTERNAL_STORAGE);\r\n           }\r\n\r\n           permissionCheck = ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE);\r\n           if (permissionCheck != PackageManager.PERMISSION_GRANTED) {\r\n               arrayPermission.add(Manifest.permission.WRITE_EXTERNAL_STORAGE);\r\n           }\r\n\r\n           if (arrayPermission.size() > 0) {\r\n               String strArray[] = new String[arrayPermission.size()];\r\n               strArray = arrayPermission.toArray(strArray);\r\n               ActivityCompat.requestPermissions(this, strArray, PERMISSION_REQUEST_CODE);\r\n           } else {\r\n               // Initialize 코드\r\n           }\r\n       }\r\n   }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        switch(requestCode) {\r\n            case PERMISSION_REQUEST_CODE: {\r\n                if (grantResults.length < 1) {\r\n//                    Toast.makeText(this, \"Failed get permission\", Toast.LENGTH_SHORT).show();\r\n                    super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n                    return ;\r\n                }\r\n\r\n                for (int i=0; i<grantResults.length; i++) {\r\n                    if (grantResults[i] != PackageManager.PERMISSION_GRANTED) {\r\n                        Toast.makeText(this, \"Permission is denied : \" + permissions[i], Toast.LENGTH_SHORT).show();\r\n                        finish();\r\n                        return ;\r\n                    }\r\n                }\r\n\r\n//                Toast.makeText(this, \"Permission is granted\", Toast.LENGTH_SHORT).show();\r\n                // Initialize 코드\r\n            }\r\n            break;\r\n        }\r\n\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n    }\r\n\r\n    public boolean checkAccessibilityPermissions(){\r\n        AccessibilityManager accessibilityManager =\r\n                (AccessibilityManager)getSystemService(Context.ACCESSIBILITY_SERVICE);\r\n\r\n        List<AccessibilityServiceInfo> list =\r\n                accessibilityManager.getEnabledAccessibilityServiceList(AccessibilityServiceInfo.FEEDBACK_GENERIC);\r\n\r\n        Log.d(\"service_test\", \"size : \" + list.size());\r\n        for(int i = 0; i < list.size(); i++){\r\n            AccessibilityServiceInfo info = list.get(i);\r\n            if(info.getResolveInfo().serviceInfo.packageName.equals(getApplication().getPackageName())){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public void setAccessibilityPermissions(){\r\n        AlertDialog.Builder permissionDialog = new AlertDialog.Builder(this);\r\n        permissionDialog.setTitle(\"접근성 권한 설정\");\r\n        permissionDialog.setMessage(\"앱을 사용하기 위해 접근성 권한이 필요합니다.\");\r\n        permissionDialog.setPositiveButton(\"허용\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                //접근성 화면으로 이동하기\r\n                startActivity(new Intent(Settings.ACTION_ACCESSIBILITY_SETTINGS));\r\n                return;\r\n            }\r\n        }).create().show();\r\n    }\r\n    @Override\r\n    public void onBackPressed() {\r\n        //super.onBackPressed();\r\n        // 기존 뒤로 가기 버튼의 기능을 막기 위해 주석 처리 또는 삭제\r\n\r\n        // 마지막으로 뒤로 가기 버튼을 눌렀던 시간에 2.5초를 더해 현재 시간과 비교 후\r\n        // 마지막으로 뒤로 가기 버튼을 눌렀던 시간이 2.5초가 지났으면 Toast 출력\r\n        // 2500 milliseconds = 2.5 seconds\r\n        if (System.currentTimeMillis() > backKeyPressedTime + 2500) {\r\n            backKeyPressedTime = System.currentTimeMillis();\r\n            toast = Toast.makeText(this, \"뒤로 가기 버튼을 한 번 더 누르시면 종료됩니다.\", Toast.LENGTH_LONG);\r\n            toast.show();\r\n            return;\r\n        }\r\n        // 마지막으로 뒤로 가기 버튼을 눌렀던 시간에 2.5초를 더해 현재 시간과 비교 후\r\n        // 마지막으로 뒤로 가기 버튼을 눌렀던 시간이 2.5초가 지나지 않았으면 종료\r\n        if (System.currentTimeMillis() <= backKeyPressedTime + 2500) {\r\n            finish();\r\n\r\n            DayMainActivity DM = (DayMainActivity) DayMainActivity.activity;\r\n            Pedometer pedo = (Pedometer) Pedometer.activity;\r\n            MainBeforeLock MB = (MainBeforeLock) MainBeforeLock.activity;\r\n            ColorFragment CF1 = (ColorFragment) ColorFragment.fragment1;\r\n            Color2Fragment CF2 = (Color2Fragment) Color2Fragment.fragment2;\r\n            Color3Fragment CF3 = (Color3Fragment) Color3Fragment.fragment3;\r\n\r\n            DM.finish();\r\n            pedo.finish();\r\n            MB.finish();\r\n\r\n\r\n\r\n            toast.cancel();\r\n            toast = Toast.makeText(this,\"이용해 주셔서 감사합니다.\",Toast.LENGTH_LONG);\r\n            toast.show();\r\n        }\r\n    }\r\n\r\n    public void run_contacts(View view){\r\n\r\n        ImageButton button_contacts;\r\n        button_contacts = (ImageButton)findViewById(R.id.imageButton2);\r\n\r\n        Intent contact_intent = new Intent(Intent.ACTION_DIAL);\r\n        startActivity(contact_intent);\r\n    }\r\n\r\n    public void run_message(View view){\r\n\r\n        ImageButton button_message;\r\n        button_message = (ImageButton) findViewById(R.id.imageButton3);\r\n\r\n        //Intent message_intent = new Intent(this.getPackageManager().getLaunchIntentForPackage(\"com.android.mms\"));\r\n        Intent message_intent = this.getPackageManager().getLaunchIntentForPackage(\"com.samsung.android.messaging\");\r\n        startActivity(message_intent);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/testsplash/pedometerLockScreen.java b/app/src/main/java/com/example/testsplash/pedometerLockScreen.java
--- a/app/src/main/java/com/example/testsplash/pedometerLockScreen.java	(revision a2e58cb955a0bdb568eda7a995c0c8ea8b74dc19)
+++ b/app/src/main/java/com/example/testsplash/pedometerLockScreen.java	(date 1638773533432)
@@ -1,7 +1,5 @@
 package com.example.testsplash;
 
-import static android.content.ContentValues.TAG;
-
 import android.Manifest;
 import android.accessibilityservice.AccessibilityServiceInfo;
 import android.app.Activity;
@@ -41,15 +39,7 @@
 
 import com.dinuscxj.progressbar.CircleProgressBar;
 
-import java.text.ParseException;
-import java.text.SimpleDateFormat;
-import java.time.LocalDate;
-import java.time.LocalTime;
-import java.time.ZoneId;
-import java.time.format.DateTimeFormatter;
 import java.util.ArrayList;
-import java.util.Calendar;
-import java.util.Date;
 import java.util.List;
 
 public class pedometerLockScreen extends Activity implements SensorEventListener { //
@@ -57,7 +47,7 @@
     public static Object activity2;
     private Activity activity;
     private boolean mIsBound;
-    private String current_time;
+
 
     Animation animation;
     ImageView imageView;
@@ -65,7 +55,6 @@
     private Thread timeThread = null;
     TextView tv_sensor;
     TextView time;
-    TextView getTv;
     TextView selected_walk;
     SensorManager sm;
     Sensor sensor_step_detector;
@@ -85,23 +74,17 @@
 
     // 마지막으로 뒤로 가기 버튼을 눌렀던 시간 저장
     private long backKeyPressedTime = 0;
-    // 첫 번째 뒤로 가기 버튼을 누를 때 표시S
+    // 첫 번째 뒤로 가기 버튼을 누를 때 표시
     private Toast toast;
-
-    //접근성 서비스 객체생성
     LockApp lock = new LockApp();
 
+    @RequiresApi(api = Build.VERSION_CODES.M)
 
-    @RequiresApi(api = Build.VERSION_CODES.O)
     @Override
     protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.run_pedometer_main);
-        lock.setFlag(false); //잠금 활성화
-
-
-        getTv = findViewById(R.id.getTime);
-        getTv.setText(getTime());
+        lock.setFlag(false);
 
         sm = (SensorManager)getSystemService(SENSOR_SERVICE);  //센서 매니저 생성
         sensor_step_detector = sm.getDefaultSensor(Sensor.TYPE_STEP_DETECTOR);  //스텝 감지 센서 등록
@@ -143,22 +126,6 @@
         timerOn();  //타이머
 }
 
-    @RequiresApi(api = Build.VERSION_CODES.O)
-    private String getTime(){
-        long now = System.currentTimeMillis();
-        Date date = new Date(now);
-
-        SimpleDateFormat dateFormat1 = new SimpleDateFormat("yyyy-MM-dd");
-        SimpleDateFormat dateFormat2 = new SimpleDateFormat("hh:mm:ss");
-
-        String getTime = dateFormat2.format(date);
-        Log.e(TAG, "current time is " + getTime);
-        return getTime;
-    }
-
-    public void compare_time() {
-    }
-
 
     //원형 프로세스바
     public void circleBar(){
@@ -269,7 +236,6 @@
             mStatus = RUNNING;
     }
 
-
     class BackRunnable implements Runnable{
         private boolean stopped=false;
         @Override
@@ -289,16 +255,6 @@
         }
     }
 
-//    public class CurrentDateTime {
-//        private LocalTime time_now;
-//
-//        @RequiresApi(api = Build.VERSION_CODES.O)
-//        public LocalTime get_time() {
-//            time_now = LocalTime.now();
-//            return time_now;
-//        }
-//    }
-
    private void permissionCheck() {
        if (android.os.Build.VERSION.SDK_INT >= 23) {
            int permissionCheck = ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE);
@@ -437,4 +393,5 @@
         startActivity(message_intent);
     }
 
+
 }
Index: app/src/main/java/com/example/testsplash/timerLockScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.testsplash;\r\n\r\nimport static android.content.ContentValues.TAG;\r\nimport android.Manifest;\r\nimport android.accessibilityservice.AccessibilityServiceInfo;\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.CountDownTimer;\r\nimport android.provider.Settings;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.accessibility.AccessibilityManager;\r\nimport android.widget.ImageButton;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.annotation.RequiresApi;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport com.dinuscxj.progressbar.CircleProgressBar;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class timerLockScreen extends Activity  {\r\n\r\n    private static final String DEFAULT_PATTERN = \"%s\"+ \":\" +\"%s\" + \":\" + \"%s\" ;\r\n    private static final int PERMISSION_REQUEST_CODE = 1000;\r\n    private Toast toast;\r\n    private long backKeyPressedTime = 0;\r\n\r\n    //접근성 서비스 객체생성\r\n    LockApp lock = new LockApp();\r\n\r\n    TextView selected_time;\r\n    BRunnable runnable = new BRunnable();\r\n    CountDownTimer countDownTimer;\r\n    TextView splitGoal; //입력받은 시간 텍스트뷰\r\n    String goalNum;  //시간을 숫자로 쪼갠 것\r\n    String goall;\r\n    TextView ex;\r\n    long conversionTime = 0;\r\n\r\n    String hour, min, second;\r\n\r\n    CircleProgressBar circleProgressBar;\r\n\r\n    String exnum=\"000009\";\r\n\r\n    @RequiresApi(api = Build.VERSION_CODES.M)\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.timer_lock_screen);\r\n\r\n        lock.setFlag(false); //잠금 활성화\r\n        circleProgressBar = findViewById(R.id.cpb_circlebar);\r\n\r\n        Thread thread = new Thread(runnable);\r\n        thread.setDaemon(true);\r\n        thread.start();\r\n\r\n        if(ContextCompat.checkSelfPermission(this,\r\n                Manifest.permission.ACTIVITY_RECOGNITION) == PackageManager.PERMISSION_DENIED){\r\n\r\n            requestPermissions(new String[]{Manifest.permission.ACTIVITY_RECOGNITION}, 0);\r\n        }\r\n        permissionCheck();\r\n        checkAccessibilityPermissions();\r\n        setAccessibilityPermissions();\r\n\r\n        selected_time = (TextView) findViewById(R.id.tv2); // 이전 화면에서 선택한 걸음을 받을 변수\r\n        Intent myIntent = getIntent();\r\n        String time = myIntent.getExtras().getString(\"time_value\");\r\n        selected_time.setText(time); // 받아온 시간 값을 selected_time 텍스트 박스에 저장한다.\r\n\r\n        countDown(splitGoal());\r\n        circleBar();\r\n    }\r\n\r\n    //입력받은 시간을 숫자와 문자로 나누기\r\n    public String splitGoal(){\r\n\r\n        String goal = selected_time.getText().toString();\r\n        if(goal.indexOf(\"시간\")>0){\r\n            goalNum = goal.substring(0, goal.indexOf(\"시간\"));\r\n            if(Integer.parseInt(goalNum)< 10){\r\n                goall = \"0\" + goalNum + \"0000\";\r\n            } else\r\n            goall = goalNum + \"0000\";\r\n        }else if(goal.indexOf(\"분\")>0){\r\n            goalNum = goal.substring(0, goal.indexOf(\"분\"));\r\n            if(Integer.parseInt(goalNum) < 10 && Integer.parseInt(goalNum) >0){\r\n                goall = \"000\" + goalNum + \"00\";\r\n                System.out.println(\"goall \" + goall);\r\n            } else\r\n            goall = \"00\" + goalNum + \"00\";\r\n        }\r\n//        Toast.makeText(this, goalNum, Toast.LENGTH_SHORT).show();\r\n        return goall;\r\n    }\r\n\r\n    public void countDown(String time){\r\n        ex = (TextView) findViewById(R.id.tv3);\r\n        //long conversionTime = 0;\r\n\r\n        // 1000 단위가 1초\r\n        // 60000 단위가 1분\r\n        // 60000 * 3600 = 1시간\r\n\r\n        String getHour = time.substring(0, 2);\r\n        String getMin = time.substring(2, 4);\r\n        String getSecond = time.substring(4, 6);\r\n\r\n        // \"00\"이 아니고, 첫번째 자리가 0 이면 제거\r\n        if (getHour.substring(0, 1) == \"0\") {\r\n            getHour = getHour.substring(1, 2);\r\n        }\r\n\r\n        if (getMin.substring(0, 1) == \"0\") {\r\n            getMin = getMin.substring(1, 2);\r\n        }\r\n\r\n        if (getSecond.substring(0, 1) == \"0\") {\r\n            getSecond = getSecond.substring(1, 2);\r\n        }\r\n\r\n        // 변환시간\r\n        conversionTime = Long.valueOf(getHour) * 1000 * 3600 + Long.valueOf(getMin) * 60 * 1000 + Long.valueOf(getSecond) * 1000;\r\n        System.out.println(\"conver\"+conversionTime);\r\n        // 첫번쨰 인자 : 원하는 시간 (예를들어 30초면 30 x 1000(주기))\r\n        // 두번쨰 인자 : 주기( 1000 = 1초)\r\n        countDownTimer = new CountDownTimer(conversionTime, 1000) {\r\n            // 특정 시간마다 뷰 변경\r\n            public void onTick(long millisUntilFinished) {\r\n\r\n                // 시간단위\r\n                hour = String.valueOf(millisUntilFinished / (60 * 60 * 1000));\r\n\r\n                // 분단위\r\n                long getMin = millisUntilFinished - (millisUntilFinished / (60 * 60 * 1000)) ;\r\n                min = String.valueOf(getMin / (60 * 1000)); // 몫\r\n\r\n                // 초단위\r\n                second = String.valueOf((getMin % (60 * 1000)) / 1000); // 나머지\r\n\r\n                // 시간이 한자리면 0을 붙인다\r\n                if (hour.length() == 1) {\r\n                    hour = \"0\" + hour;\r\n                }\r\n\r\n                // 분이 한자리면 0을 붙인다\r\n                if (min.length() == 1) {\r\n                    min = \"0\" + min;\r\n                }\r\n\r\n                // 초가 한자리면 0을 붙인다\r\n                if (second.length() == 1) {\r\n                    second = \"0\" + second;\r\n                }\r\n\r\n                int temp1 = Integer.parseInt(min);\r\n                int temp2 = Integer.parseInt(time);\r\n                Log.e(TAG,\"time = \" + temp2);\r\n                Log.e(TAG,\"min = \" + temp1);\r\n\r\n                if (temp2 >= 10000) {\r\n                    temp2 = temp2 / 10000;\r\n                    int temp3 = temp1 / temp2;\r\n                    Log.e(TAG,\"min / time = \" + temp3);\r\n                    min = Integer.toString(temp3);\r\n                    Log.e(TAG,\"min = \" + min);\r\n                }\r\n\r\n                ex.setText(hour + \":\" + min + \":\" + second);\r\n            }\r\n\r\n            // 제한시간 종료시\r\n            public void onFinish() {\r\n                // 변경 후\r\n                ex.setText(\"종료!\");\r\n                Intent myIntent1 = new Intent(getApplicationContext(),Complete.class);\r\n                startActivity(myIntent1);\r\n                // TODO : 타이머가 모두 종료될때 어떤 이벤트를 진행할지\r\n            }\r\n        }.start();\r\n    }\r\n\r\n    \r\n    \r\n    public void circleBar(){\r\n       // splitGoal = (TextView)findViewById(R.id.tv2);  //목표 값 가져오기\r\n       // int num = Integer.parseInt(splitGoal.getText().toString());\r\n        CircleProgressBar.ProgressFormatter progressFormatter = new CircleProgressBar.ProgressFormatter() {\r\n            @Override\r\n            public CharSequence format(int progress, int max) {\r\n                System.out.println(\"abcde\"+ hour + min +second);\r\n                return String.format(DEFAULT_PATTERN, hour, min, second);   //위의 hour, min, second 값을 못 읽어옴\r\n            }\r\n        };\r\n\r\n        circleProgressBar.setProgressFormatter(progressFormatter);\r\n        circleProgressBar.setProgressTextColor(ContextCompat.getColor(this, R.color.button_color));\r\n        circleProgressBar.setProgressBackgroundColor(ContextCompat.getColor(this, R.color.white_gray_color));\r\n        circleProgressBar.setProgressStartColor(ContextCompat.getColor(this, R.color.button_color));\r\n        circleProgressBar.setProgressEndColor(ContextCompat.getColor(this, R.color.button_color));\r\n        int max = 100;\r\n        int progress = 70;\r\n        int pi = 360;\r\n        int start = 270;\r\n\r\n\r\n        //이 부분 수정하면 원형 프로세스가 바뀜\r\n        System.out.println(\"goall\" +goall);\r\n        int degree = (int)((30/30)*pi)-90;\r\n        circleProgressBar.setMax((int)conversionTime);\r\n        circleProgressBar.setProgress(100);\r\n        circleProgressBar.setStartDegree(degree);\r\n    }\r\n    private void permissionCheck() {\r\n        if (android.os.Build.VERSION.SDK_INT >= 23) {\r\n            int permissionCheck = ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE);\r\n            ArrayList<String> arrayPermission = new ArrayList<String>();\r\n\r\n            if (permissionCheck != PackageManager.PERMISSION_GRANTED) {\r\n                arrayPermission.add(Manifest.permission.READ_EXTERNAL_STORAGE);\r\n            }\r\n\r\n            permissionCheck = ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE);\r\n            if (permissionCheck != PackageManager.PERMISSION_GRANTED) {\r\n                arrayPermission.add(Manifest.permission.WRITE_EXTERNAL_STORAGE);\r\n            }\r\n\r\n            if (arrayPermission.size() > 0) {\r\n                String strArray[] = new String[arrayPermission.size()];\r\n                strArray = arrayPermission.toArray(strArray);\r\n                ActivityCompat.requestPermissions(this, strArray, PERMISSION_REQUEST_CODE);\r\n            } else {\r\n                // Initialize 코드\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        switch(requestCode) {\r\n            case PERMISSION_REQUEST_CODE: {\r\n                if (grantResults.length < 1) {\r\n//                    Toast.makeText(this, \"Failed get permission\", Toast.LENGTH_SHORT).show();\r\n                    super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n                    return ;\r\n                }\r\n\r\n                for (int i=0; i<grantResults.length; i++) {\r\n                    if (grantResults[i] != PackageManager.PERMISSION_GRANTED) {\r\n                        Toast.makeText(this, \"Permission is denied : \" + permissions[i], Toast.LENGTH_SHORT).show();\r\n                        finish();\r\n                        return ;\r\n                    }\r\n                }\r\n\r\n//                Toast.makeText(this, \"Permission is granted\", Toast.LENGTH_SHORT).show();\r\n                // Initialize 코드\r\n            }\r\n            break;\r\n        }\r\n\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n    }\r\n\r\n    public boolean checkAccessibilityPermissions(){\r\n        AccessibilityManager accessibilityManager =\r\n                (AccessibilityManager)getSystemService(Context.ACCESSIBILITY_SERVICE);\r\n\r\n        List<AccessibilityServiceInfo> list =\r\n                accessibilityManager.getEnabledAccessibilityServiceList(AccessibilityServiceInfo.FEEDBACK_GENERIC);\r\n\r\n        Log.d(\"service_test\", \"size : \" + list.size());\r\n        for(int i = 0; i < list.size(); i++){\r\n            AccessibilityServiceInfo info = list.get(i);\r\n            if(info.getResolveInfo().serviceInfo.packageName.equals(getApplication().getPackageName())){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public void setAccessibilityPermissions(){\r\n        AlertDialog.Builder permissionDialog = new AlertDialog.Builder(this);\r\n        permissionDialog.setTitle(\"접근성 권한 설정\");\r\n        permissionDialog.setMessage(\"앱을 사용하기 위해 접근성 권한이 필요합니다.\");\r\n        permissionDialog.setPositiveButton(\"허용\", new DialogInterface.OnClickListener() {\r\n            @Override\r\n            public void onClick(DialogInterface dialog, int which) {\r\n                //접근성 화면으로 이동하기\r\n                startActivity(new Intent(Settings.ACTION_ACCESSIBILITY_SETTINGS));\r\n                return;\r\n            }\r\n        }).create().show();\r\n    }\r\n    @Override\r\n    public void onBackPressed() {\r\n        //super.onBackPressed();\r\n        // 기존 뒤로 가기 버튼의 기능을 막기 위해 주석 처리 또는 삭제\r\n\r\n        // 마지막으로 뒤로 가기 버튼을 눌렀던 시간에 2.5초를 더해 현재 시간과 비교 후\r\n        // 마지막으로 뒤로 가기 버튼을 눌렀던 시간이 2.5초가 지났으면 Toast 출력\r\n        // 2500 milliseconds = 2.5 seconds\r\n        if (System.currentTimeMillis() > backKeyPressedTime + 2500) {\r\n            backKeyPressedTime = System.currentTimeMillis();\r\n            toast = Toast.makeText(this, \"뒤로 가기 버튼을 한 번 더 누르시면 종료됩니다.\", Toast.LENGTH_LONG);\r\n            toast.show();\r\n            return;\r\n        }\r\n        // 마지막으로 뒤로 가기 버튼을 눌렀던 시간에 2.5초를 더해 현재 시간과 비교 후\r\n        // 마지막으로 뒤로 가기 버튼을 눌렀던 시간이 2.5초가 지나지 않았으면 종료\r\n        if (System.currentTimeMillis() <= backKeyPressedTime + 2500) {\r\n            finish();\r\n\r\n            DayMainActivity DM = (DayMainActivity) DayMainActivity.activity;\r\n            Pedometer pedo = (Pedometer) Pedometer.activity;\r\n            MainBeforeLock MB = (MainBeforeLock) MainBeforeLock.activity;\r\n            ColorFragment CF1 = (ColorFragment) ColorFragment.fragment1;\r\n            Color2Fragment CF2 = (Color2Fragment) Color2Fragment.fragment2;\r\n            Color3Fragment CF3 = (Color3Fragment) Color3Fragment.fragment3;\r\n\r\n            DM.finish();\r\n            pedo.finish();\r\n            MB.finish();\r\n\r\n            toast.cancel();\r\n            toast = Toast.makeText(this,\"이용해 주셔서 감사합니다.\",Toast.LENGTH_LONG);\r\n            toast.show();\r\n        }\r\n    }\r\n\r\n    public void run_contacts(View view){\r\n\r\n        ImageButton button_contacts;\r\n        button_contacts = (ImageButton)findViewById(R.id.imageButton2);\r\n\r\n        Intent contact_intent = new Intent(Intent.ACTION_DIAL);\r\n        startActivity(contact_intent);\r\n    }\r\n\r\n    public void run_message(View view){\r\n\r\n        ImageButton button_message;\r\n        button_message = (ImageButton) findViewById(R.id.imageButton3);\r\n\r\n        //Intent message_intent = new Intent(this.getPackageManager().getLaunchIntentForPackage(\"com.android.mms\"));\r\n        Intent message_intent = this.getPackageManager().getLaunchIntentForPackage(\"com.samsung.android.messaging\");\r\n        startActivity(message_intent);\r\n    }\r\n\r\n    class BRunnable implements Runnable{\r\n        private boolean stopped=false;\r\n        @Override\r\n        public void run() {\r\n            while(!stopped){   //!Thread.currentThread().isInterrupted()\r\n                circleBar();\r\n                try{\r\n                    Thread.sleep(1000);\r\n                }catch(InterruptedException e){\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n        public void stop(){\r\n            stopped=true;\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/testsplash/timerLockScreen.java b/app/src/main/java/com/example/testsplash/timerLockScreen.java
--- a/app/src/main/java/com/example/testsplash/timerLockScreen.java	(revision a2e58cb955a0bdb568eda7a995c0c8ea8b74dc19)
+++ b/app/src/main/java/com/example/testsplash/timerLockScreen.java	(date 1638773533439)
@@ -37,8 +37,6 @@
     private static final int PERMISSION_REQUEST_CODE = 1000;
     private Toast toast;
     private long backKeyPressedTime = 0;
-
-    //접근성 서비스 객체생성
     LockApp lock = new LockApp();
 
     TextView selected_time;
@@ -61,10 +59,11 @@
     protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.timer_lock_screen);
-
-        lock.setFlag(false); //잠금 활성화
+        lock.setFlag(false);
+        //splitGoal = (TextView) findViewById(R.id.tv2);
         circleProgressBar = findViewById(R.id.cpb_circlebar);
 
+
         Thread thread = new Thread(runnable);
         thread.setDaemon(true);
         thread.start();
Index: app/src/main/java/com/example/testsplash/CurrentDateTime.java
===================================================================
diff --git a/app/src/main/java/com/example/testsplash/CurrentDateTime.java b/app/src/main/java/com/example/testsplash/CurrentDateTime.java
deleted file mode 100644
--- a/app/src/main/java/com/example/testsplash/CurrentDateTime.java	(revision a2e58cb955a0bdb568eda7a995c0c8ea8b74dc19)
+++ /dev/null	(revision a2e58cb955a0bdb568eda7a995c0c8ea8b74dc19)
@@ -1,43 +0,0 @@
-package com.example.testsplash;
-
-import android.os.Build;
-import androidx.annotation.RequiresApi;
-import java.time.LocalDate;
-import java.time.LocalTime;
-import java.time.format.DateTimeFormatter;
-
-
-public class CurrentDateTime {
-    private LocalTime time_now;
-    @RequiresApi(api = Build.VERSION_CODES.O)
-    public static void main(String[] args) {
-        // 현재 날짜 구하기 (시스템 시계, 시스템 타임존)
-        LocalDate Date_now = LocalDate.now();
-        // 결과 출력
-        System.out.println(Date_now); // 2021-06-17
-        // 포맷 정의
-        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("yyyy/MM/dd");
-        // 포맷 적용
-        String dateFormatedNow = Date_now.format(dateFormatter);
-        // 결과 출력
-        System.out.println(dateFormatedNow); // 2021/06/17
-
-
-        // 현재 시간
-        LocalTime time_now = LocalTime.now();
-        // 현재시간 출력
-        System.out.println(time_now); // 06:20:57.008731300
-        // 포맷 정의하기
-        DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern("HH시 mm분 ss초");
-        // 포맷 적용하기
-        String timeFormatedNow = time_now.format(dateFormatter);
-        // 포맷 적용된 현재 시간 출력
-        System.out.println(dateFormatedNow); // 06시 20분 57초
-    }
-
-    @RequiresApi(api = Build.VERSION_CODES.O)
-    public LocalTime get_time() {
-        time_now = LocalTime.now();
-        return time_now;
-    }
-}
Index: app/src/main/java/com/example/testsplash/DayMainActivity2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.testsplash;\r\n\r\nimport static android.content.ContentValues.TAG;\r\n\r\nimport android.app.Activity;\r\nimport android.app.DatePickerDialog;\r\nimport android.app.TimePickerDialog;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.DatePicker;\r\nimport android.widget.TextView;\r\nimport android.widget.TimePicker;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\npublic class DayMainActivity2 extends AppCompatActivity{\r\n    int hour = 0;\r\n    int minute = 0;\r\n    public static Activity activity;\r\n\r\n    private TextView textView_Date;\r\n    private DatePickerDialog.OnDateSetListener callbackMethod;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.dayactivity_main);\r\n\r\n        activity = DayMainActivity2.this;\r\n        this.InitializeView();\r\n        this.InitializeListener();\r\n\r\n        Button btn1 = (Button) findViewById(R.id.btn_selectDate);\r\n        btn1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                DatePickerDialog dialog = new DatePickerDialog(DayMainActivity2.this, callbackMethod, 2021, 10, 30);\r\n                dialog.show();\r\n            }\r\n        });\r\n\r\n        Button btn2 = (Button) findViewById(R.id.btn_time);\r\n        btn2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                TimePickerDialog timePickerDialog = new TimePickerDialog\r\n                        (DayMainActivity2.this, new TimePickerDialog.OnTimeSetListener() {\r\n                            @Override\r\n                            public void onTimeSet(TimePicker view, int hourOfDay, int minute) {\r\n                                TextView textView_time = (TextView)findViewById(R.id.textView_time);\r\n                                String time =  String.valueOf(hourOfDay) + \"시 \" + String.valueOf(minute) + \"분\";\r\n                                textView_time.setText(time);\r\n                            }\r\n                        },hour, minute, false);\r\n                timePickerDialog.show();\r\n            }// 참고: https://mainia.tistory.com/733\r\n        });\r\n\r\n        Button btn3 = (Button) findViewById(R.id.btn_confirm2);\r\n        btn3.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent time_intent = new Intent(getApplicationContext(),timerLockScreen.class);\r\n                Intent myIntent = getIntent();\r\n\r\n                String time = myIntent.getExtras().getString(\"time_value\");\r\n                time_intent.putExtra(\"time_value\", time);\r\n\r\n                startActivity(time_intent);\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n    public void InitializeView()\r\n    {\r\n        textView_Date = (TextView)findViewById(R.id.textView_date);\r\n    }\r\n\r\n    public void InitializeListener()\r\n    {\r\n        callbackMethod = new DatePickerDialog.OnDateSetListener()\r\n        {\r\n            @Override\r\n            public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth)\r\n            {\r\n                textView_Date.setText(year + \"년\" + (monthOfYear + 1) + \"월\" + dayOfMonth + \"일\");\r\n            }\r\n        };\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/testsplash/DayMainActivity2.java b/app/src/main/java/com/example/testsplash/DayMainActivity2.java
--- a/app/src/main/java/com/example/testsplash/DayMainActivity2.java	(revision a2e58cb955a0bdb568eda7a995c0c8ea8b74dc19)
+++ b/app/src/main/java/com/example/testsplash/DayMainActivity2.java	(date 1638773533449)
@@ -1,13 +1,10 @@
 package com.example.testsplash;
 
-import static android.content.ContentValues.TAG;
-
 import android.app.Activity;
 import android.app.DatePickerDialog;
 import android.app.TimePickerDialog;
 import android.content.Intent;
 import android.os.Bundle;
-import android.util.Log;
 import android.view.View;
 import android.widget.Button;
 import android.widget.DatePicker;
@@ -29,9 +26,9 @@
         super.onCreate(savedInstanceState);
         setContentView(R.layout.dayactivity_main);
 
-        activity = DayMainActivity2.this;
         this.InitializeView();
         this.InitializeListener();
+        activity = DayMainActivity2.this;
 
         Button btn1 = (Button) findViewById(R.id.btn_selectDate);
         btn1.setOnClickListener(new View.OnClickListener() {
@@ -51,7 +48,10 @@
                             @Override
                             public void onTimeSet(TimePicker view, int hourOfDay, int minute) {
                                 TextView textView_time = (TextView)findViewById(R.id.textView_time);
-                                String time =  String.valueOf(hourOfDay) + "시 " + String.valueOf(minute) + "분";
+
+                                String time =  String.valueOf(hourOfDay) + "시 "
+                                        + String.valueOf(minute) + "분";
+//                                Toast.makeText(DayMainActivity.this, time, Toast.LENGTH_LONG).show();
                                 textView_time.setText(time);
                             }
                         },hour, minute, false);
@@ -75,6 +75,10 @@
         });
 
     }
+    //    @Override
+//    public void onBackPressed() {
+//        //super.onBackPressed();
+//    }
     public void InitializeView()
     {
         textView_Date = (TextView)findViewById(R.id.textView_date);
Index: app/src/main/res/layout/run_pedometer_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\".pedometerLockScreen\">\r\n\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"50dp\"\r\n        android:layout_marginTop=\"36dp\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        tools:layout_editor_absoluteX=\"0dp\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/tv1\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"right|center_vertical\"\r\n            android:layout_marginLeft=\"120dp\"\r\n            android:textSize=\"15pt\"\r\n            android:text=\"@string/title\" />\r\n        <TextView\r\n            android:id=\"@+id/swalk\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:textSize=\"15pt\"\r\n            android:text=\"test\" />\r\n        <TextView\r\n            android:id=\"@+id/getTime\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:textSize=\"15pt\"\r\n            android:text=\"test\" />\r\n\r\n        <!--        <TextView-->\r\n        <!--            android:id=\"@+id/tv2\"-->\r\n        <!--            android:layout_width=\"wrap_content\"-->\r\n        <!--            android:layout_height=\"wrap_content\"-->\r\n        <!--            android:textSize=\"15pt\"-->\r\n        <!--            android:layout_gravity=\"right|center_vertical\"-->\r\n        <!--            android:text=\"15000\" />-->\r\n\r\n    </LinearLayout>\r\n\r\n    <com.dinuscxj.progressbar.CircleProgressBar\r\n        android:id=\"@+id/cpb_circlebar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"323dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.183\"\r\n        app:progress_end_color=\"#FF2424\"\r\n        app:progress_start_color=\"#FFBB00\"\r\n        app:progress_stroke_cap=\"round\"\r\n        app:progress_stroke_width=\"20dp \"\r\n        app:progress_text_size=\"50sp\"\r\n        app:style=\"solid_line\" />\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/ll1\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"392dp\"\r\n        android:layout_marginBottom=\"10dp\"\r\n        android:orientation=\"horizontal\"\r\n        android:paddingBottom=\"30dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.216\">\r\n\r\n\r\n        <TextView\r\n            android:id=\"@+id/tv3\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:paddingLeft=\"130dp\"\r\n            android:text=\"@string/time\"\r\n            android:textSize=\"20dp\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tv4\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:paddingLeft=\"35dp\"\r\n            android:text=\"@string/timer\"\r\n            android:textSize=\"20dp\" />\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/ll2\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"61dp\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/ll1\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/tv5\"\r\n            android:layout_width=\"83dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:paddingLeft=\"130dp\"\r\n            android:text=\"@string/cal\"\r\n            android:textSize=\"20dp\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tv6\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_weight=\"1\"\r\n            android:text=\"512Kcal\"\r\n            android:textSize=\"20dp\" />\r\n    </LinearLayout>\r\n\r\n    <TextView\r\n        android:id=\"@+id/sensor\"\r\n        android:layout_width=\"104dp\"\r\n        android:layout_height=\"64dp\"\r\n        android:gravity=\"center\"\r\n        android:visibility=\"invisible\"\r\n        android:text=\"0\"\r\n        android:textSize=\"30sp\"\r\n        app:layout_constraintHorizontal_bias=\"0.498\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.41\" />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/imageButton\"\r\n        android:layout_width=\"100dp\"\r\n        android:layout_height=\"73dp\"\r\n        android:clickable=\"true\"\r\n        android:onClick=\"goto_home\"\r\n        android:scaleType=\"fitCenter\"\r\n        android:src=\"@drawable/home\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.518\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.913\" />\r\n\r\n    <ImageView\r\n        android:id=\"@+id/imageView\"\r\n        android:layout_width=\"117dp\"\r\n        android:layout_height=\"100dp\"\r\n        android:scaleType=\"fitCenter\"\r\n        android:src=\"@drawable/shoes2\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.377\"\r\n        android:stateListAnimator=\"@anim/shake_shoe\"/>\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/imageButton2\"\r\n        android:layout_width=\"90dp\"\r\n        android:layout_height=\"74dp\"\r\n        android:clickable=\"true\"\r\n        android:onClick=\"run_contacts\"\r\n        android:scaleType=\"fitCenter\"\r\n        android:src=\"@drawable/phone\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.127\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.914\" />\r\n\r\n    <ImageButton\r\n        android:id=\"@+id/imageButton3\"\r\n        android:layout_width=\"90dp\"\r\n        android:layout_height=\"74dp\"\r\n        android:clickable=\"true\"\r\n        android:onClick=\"run_message\"\r\n        android:scaleType=\"fitCenter\"\r\n        android:src=\"@drawable/message\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.912\"\r\n        app:layout_constraintLeft_toLeftOf=\"parent\"\r\n        app:layout_constraintRight_toRightOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.914\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/run_pedometer_main.xml b/app/src/main/res/layout/run_pedometer_main.xml
--- a/app/src/main/res/layout/run_pedometer_main.xml	(revision a2e58cb955a0bdb568eda7a995c0c8ea8b74dc19)
+++ b/app/src/main/res/layout/run_pedometer_main.xml	(date 1638773533454)
@@ -32,13 +32,6 @@
             android:layout_gravity="center"
             android:textSize="15pt"
             android:text="test" />
-        <TextView
-            android:id="@+id/getTime"
-            android:layout_width="wrap_content"
-            android:layout_height="wrap_content"
-            android:layout_gravity="center"
-            android:textSize="15pt"
-            android:text="test" />
 
         <!--        <TextView-->
         <!--            android:id="@+id/tv2"-->
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n}\r\n\r\nandroid {\r\n    compileSdk 31\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.testsplash\"\r\n        minSdk 21\r\n        targetSdk 31\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.3.1'\r\n    implementation 'com.google.android.material:material:1.4.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'\r\n    implementation 'com.dinuscxj:circleprogressbar:1.3.0' // CircleProgressBar\r\n    testImplementation 'junit:junit:4.+'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	(revision a2e58cb955a0bdb568eda7a995c0c8ea8b74dc19)
+++ b/app/build.gradle	(date 1638773533459)
@@ -32,7 +32,8 @@
     implementation 'androidx.appcompat:appcompat:1.3.1'
     implementation 'com.google.android.material:material:1.4.0'
     implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
-    implementation 'com.dinuscxj:circleprogressbar:1.3.0' // CircleProgressBar
+    implementation 'com.dinuscxj:circleprogressbar:1.3.0'
+    implementation 'androidx.annotation:annotation:1.2.0'// CircleProgressBar
     testImplementation 'junit:junit:4.+'
     androidTestImplementation 'androidx.test.ext:junit:1.1.3'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/drawable-v24/ic_launcher_foreground.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/drawable/background_splash.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/drawable/combo_background.xml\" value=\"0.35833333333333334\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/drawable/ic_launcher_background.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/layout/activity_main.xml\" value=\"0.27696793002915454\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/layout/activity_timepicker.xml\" value=\"0.20052083333333334\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/layout/complete.xml\" value=\"0.19947916666666668\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/layout/d_listview.xml\" value=\"0.3333333333333333\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/layout/dayactivity_main.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/layout/daytactivity_nextpage.xml\" value=\"0.20052083333333334\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/layout/listview.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/layout/main_before_lock.xml\" value=\"0.3333333333333333\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/layout/pedometer.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/layout/splash.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/layout/testlayout.xml\" value=\"0.33106884057971014\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/layout/timer.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/layout/viewactivity_main.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/layout/viewfragment_color1.xml\" value=\"0.16666666666666666\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/layout/viewfragment_color2.xml\" value=\"0.16666666666666666\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/layout/viewfragment_color3.xml\" value=\"0.16666666666666666\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Android/AndroidStudioProjects/TestSplash/app/src/main/res/xml/accessibility_service_config.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/drawable-v24/buttoncustom.xml\" value=\"0.21302083333333333\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/drawable/background_splash.xml\" value=\"0.10648148148148148\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/layout/activity_timepicker.xml\" value=\"0.196875\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/layout/complete.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/layout/complete2.xml\" value=\"0.3333333333333333\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/layout/d_listview.xml\" value=\"0.20052083333333334\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/layout/dayactivity_main.xml\" value=\"0.3333333333333333\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/layout/listview.xml\" value=\"0.20052083333333334\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/layout/main_before_lock.xml\" value=\"0.20052083333333334\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/layout/pedometer.xml\" value=\"0.20052083333333334\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/layout/run_pedometer_main.xml\" value=\"0.20052083333333334\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/layout/splash.xml\" value=\"0.3333333333333333\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/layout/testlayout.xml\" value=\"0.20052083333333334\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/layout/timer.xml\" value=\"0.20052083333333334\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/layout/timer_lock_screen.xml\" value=\"0.359375\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/layout/viewactivity_main.xml\" value=\"0.20052083333333334\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/layout/viewfragment_color1.xml\" value=\"0.20052083333333334\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/layout/viewfragment_color2.xml\" value=\"0.20052083333333334\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/layout/viewfragment_color3.xml\" value=\"0.20052083333333334\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/layout/viewfragment_color4.xml\" value=\"0.196875\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/layout/viewfragment_color5.xml\" value=\"0.196875\" />\r\n        <entry key=\"..\\:/Android/Gold_been_time/TestSplash/app/src/main/res/layout/viewfragment_color6.xml\" value=\"0.196875\" />\r\n        <entry key=\"..\\:/Android/TestSplash/app/src/main/res/layout/activity_main.xml\" value=\"0.19895833333333332\" />\r\n        <entry key=\"..\\:/Android/TestSplash/app/src/main/res/layout/complete.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Android/TestSplash/app/src/main/res/layout/dayactivity_main.xml\" value=\"0.19895833333333332\" />\r\n        <entry key=\"..\\:/Android/TestSplash/app/src/main/res/layout/pedometer.xml\" value=\"0.19895833333333332\" />\r\n        <entry key=\"..\\:/Android/TestSplash/app/src/main/res/layout/run_pedometer_main.xml\" value=\"0.34103260869565216\" />\r\n        <entry key=\"..\\:/Android/TestSplash/app/src/main/res/layout/viewactivity_main.xml\" value=\"0.19895833333333332\" />\r\n        <entry key=\"..\\:/Users/User/AndroidStudioProjects/TestSplash/app/src/main/res/drawable-v24/ic_launcher_foreground.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/User/AndroidStudioProjects/TestSplash/app/src/main/res/layout/activity_main.xml\" value=\"0.1778115501519757\" />\r\n        <entry key=\"..\\:/Users/User/AndroidStudioProjects/TestSplash/app/src/main/res/layout/activity_timepicker.xml\" value=\"0.1778115501519757\" />\r\n        <entry key=\"..\\:/Users/User/AndroidStudioProjects/TestSplash/app/src/main/res/layout/d_listview.xml\" value=\"0.1778115501519757\" />\r\n        <entry key=\"..\\:/Users/User/AndroidStudioProjects/TestSplash/app/src/main/res/layout/dayactivity_main.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/User/AndroidStudioProjects/TestSplash/app/src/main/res/layout/listview.xml\" value=\"0.18\" />\r\n        <entry key=\"..\\:/Users/User/AndroidStudioProjects/TestSplash/app/src/main/res/layout/main_before_lock.xml\" value=\"0.1778115501519757\" />\r\n        <entry key=\"..\\:/Users/User/AndroidStudioProjects/TestSplash/app/src/main/res/layout/pedometer.xml\" value=\"0.22\" />\r\n        <entry key=\"..\\:/Users/User/AndroidStudioProjects/TestSplash/app/src/main/res/layout/run_pedometer_main.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/User/AndroidStudioProjects/TestSplash/app/src/main/res/layout/shake_shoe.xml\" value=\"0.17299898682877407\" />\r\n        <entry key=\"..\\:/Users/User/AndroidStudioProjects/TestSplash/app/src/main/res/layout/splash.xml\" value=\"0.1778115501519757\" />\r\n        <entry key=\"..\\:/Users/User/AndroidStudioProjects/TestSplash/app/src/main/res/layout/testlayout.xml\" value=\"0.1778115501519757\" />\r\n        <entry key=\"..\\:/Users/User/AndroidStudioProjects/TestSplash/app/src/main/res/layout/timer.xml\" value=\"0.1778115501519757\" />\r\n        <entry key=\"..\\:/Users/User/AndroidStudioProjects/TestSplash/app/src/main/res/layout/viewactivity_main.xml\" value=\"0.1778115501519757\" />\r\n        <entry key=\"..\\:/Users/User/AndroidStudioProjects/TestSplash/app/src/main/res/layout/viewfragment_color1.xml\" value=\"0.2046875\" />\r\n        <entry key=\"..\\:/Users/User/AndroidStudioProjects/TestSplash/app/src/main/res/layout/viewfragment_color3.xml\" value=\"0.1778115501519757\" />\r\n        <entry key=\"..\\:/Users/User/Documents/Github/Gold_been_time/TestSplash/app/src/main/res/layout/run_pedometer_main.xml\" value=\"0.2046875\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Android Studio default JDK\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n  <component name=\"VisualizationToolProject\">\r\n    <option name=\"state\">\r\n      <ProjectState>\r\n        <option name=\"scale\" value=\"0.33\" />\r\n      </ProjectState>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision a2e58cb955a0bdb568eda7a995c0c8ea8b74dc19)
+++ b/.idea/misc.xml	(date 1638773533464)
@@ -70,10 +70,14 @@
         <entry key="..\:/Users/User/AndroidStudioProjects/TestSplash/app/src/main/res/layout/viewactivity_main.xml" value="0.1778115501519757" />
         <entry key="..\:/Users/User/AndroidStudioProjects/TestSplash/app/src/main/res/layout/viewfragment_color1.xml" value="0.2046875" />
         <entry key="..\:/Users/User/AndroidStudioProjects/TestSplash/app/src/main/res/layout/viewfragment_color3.xml" value="0.1778115501519757" />
+        <entry key="..\:/Users/User/Documents/Github/Gold_been_time/TestSplash/app/src/main/res/layout/main_before_lock.xml" value="0.36614583333333334" />
+        <entry key="..\:/Users/User/Documents/Github/Gold_been_time/TestSplash/app/src/main/res/layout/pedometer.xml" value="0.36614583333333334" />
         <entry key="..\:/Users/User/Documents/Github/Gold_been_time/TestSplash/app/src/main/res/layout/run_pedometer_main.xml" value="0.2046875" />
+        <entry key="..\:/Users/User/Documents/Github/Gold_been_time/TestSplash/app/src/main/res/layout/timer_lock_screen.xml" value="0.36614583333333334" />
       </map>
     </option>
   </component>
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
   <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="Android Studio default JDK" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
